/* Blur effect when menu is open */
.blurred {
  filter: blur(6px);
  pointer-events: none;
  user-select: none;
}

.nav {
  margin: auto;
  left: 50%;
  transform: translateX(-50%);
}

/* Animation logic */
.nav-start {
  width: 220px;
  border-radius: 9999px; /* fully round */
  /* transition: all 1s ease; */
  /* overflow: hidden; */
}
.navLinks,
.navBtn {
  scale: 0;
  width: 0;
  height: 0;
  opacity: 0;
  transition: all 0.3s ease;
}

.nav-expanded {
  width: 1344px;
  /* height: 80px; */
  transition: all 1s ease;
  overflow: hidden;
}
.navItems-expanded {
  scale: 1;
  width: auto;
  height: auto;
  opacity: 1;
}
@media screen and (max-width: 1199px) {
  .nav-expanded {
    max-width: 95%;
  }
}
@media screen and (max-width: 991px) {
  .navLinks,
  .navBtn {
    scale: 0;
    width: 0;
    height: 0;
    opacity: 0;
    transition: all 0.3s ease;
  }
}

@media screen and (max-width: 600px) {
}

.cl-link {
  max-width: 600px;
  width: max-content;
  color: var(--color-black);
  padding: 10px 10px 10px 40px;
  background-color: #eee1d7;
  border-radius: 50px;
  display: block;
  cursor: pointer;
  margin: 0 auto 40px;
  position: fixed;
  bottom: 0px;
  left: 50%;
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transform: translate(-50%, 200%);
  transition: opacity 0.64s cubic-bezier(0.36, 0.33, 0, 1),
    transform 0.64s cubic-bezier(0.36, 0.33, 0, 1),
    visibility 0.64s cubic-bezier(0.36, 0.33, 0, 1);
}
@media screen and (max-width: 767px) {
  .cl-link {
    padding: 0;
    font-size: 14px;
  }
  .cl-link button span {
    font-size: 14px;
  }
}
.mobile-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  color: #ffffff;
  transition: all 0.5s ease;
}
.mobile-icon svg {
  width: 20px;
  height: 22px;
}
.mobile-icon:hover {
  /* color: #ff6e1f; */
  /* scale: 1.07; */
}
.menuBt {
  scale: 0;
  transition: all 0.3s ease;
}
/* .menuBtn-expanded {
  scale: 1;
  opacity: 1;
} */

.cl-link.visible {
  opacity: 1;
  visibility: visible;
  transform: translate(-50%, 0);
}

/* base for the animated label */
.cl-scroll-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  white-space: nowrap;
  letter-spacing: -0.01em;
  width: auto;
  height: auto;
  /* ensures the pseudo elements sit behind text */
  z-index: 0;
}

/* original visible text */
.cl-scroll-btn > span {
  display: inline-block;
  transition: transform 0.22s cubic-bezier(0.55, 0.06, 0.68, 0.19),
    opacity 0.18s ease;
  transform: translateY(0);
  opacity: 1;
  z-index: 2;
  /* inherit color from button (text-white) unless changed */
}

/* background highlight (optional) */
.cl-scroll-btn::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  z-index: 1;
  transition: opacity 0.25s ease;
}

/* the replacement text that slides up */
.cl-scroll-btn::after {
  content: attr(data-text);
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, 120%);
  opacity: 0;
  z-index: 2;
  white-space: nowrap;
  transition: transform 0.28s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    opacity 0.28s ease;
  pointer-events: none;
}

/* ---------- Hover/Focus triggers ----------
     We include selectors so hovering/focusing the parent <button>
     also triggers the animation (button:hover .cl-scroll-btn ...)
  -------------------------------------------------- */

/* hide original text and move it up */
.cl-scroll-btn:hover > span,
button:hover .cl-scroll-btn > span,
button:focus .cl-scroll-btn > span {
  transform: translateY(-120%);
  opacity: 0;
}

/* show replacement text (centered) */
.cl-scroll-btn:hover::after,
button:hover .cl-scroll-btn::after,
button:focus .cl-scroll-btn::after {
  transform: translate(-50%, -50%);
  opacity: 1;
}

/* show subtle background on hover */
.cl-scroll-btn:hover::before,
button:hover .cl-scroll-btn::before,
button:focus .cl-scroll-btn::before {
  opacity: 1;
}

/* Optional: make the replacement text color orange for emphasis */
button:hover .cl-scroll-btn::after,
button:focus .cl-scroll-btn::after {
  /* if you want orange replacement text on hover, uncomment above and
       optionally change the original button text color with JS/CSS */
}

/* Small accessibility tweak: focus visible */
button:focus {
  outline: none;
}

.last-text {
  width: 100%;
  overflow: hidden;
}

.last-text svg {
  width: 100%;
  overflow: hidden;
}
/* container circle */
#menuBtn {
  align-items: center;
  justify-content: center;
  width: 38px; /* adjust size */
  height: 38px; /* adjust size */
  border-radius: 50%;
  background: #000; /* circle color */
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  /* subtle shadow (optional) */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

/* inner hamburger wrapper keeps relative for absolute lines */
.hamburger {
  position: relative;
  width: 26px;
  height: 26px;
  display: block;
}

/* lines as absolute so we can center & animate precisely */
.icon-line {
  position: absolute;
  left: 50%;
  width: 20px;
  height: 2px;
  background-color: #fff; /* line color */
  border-radius: 3px;
  transform-origin: center;
  transition: transform 350ms cubic-bezier(0.2, 0.9, 0.2, 1),
    top 350ms cubic-bezier(0.2, 0.9, 0.2, 1), opacity 250ms ease;
  transform: translateX(-50%) rotate(0deg);
  will-change: transform, top, opacity;
}

/* initial positions: one a bit above center, one a bit below */
.icon-line.line-top {
  top: calc(50% - 5px); /* adjust spacing between lines */
}

.icon-line.line-bottom {
  top: calc(50% + 5px);
}

/* OPEN state: bring both to exact center and rotate to form X */
#menuBtn.open .icon-line.line-top {
  top: 50%;
  transform: translateX(-50%) rotate(45deg);
}

#menuBtn.open .icon-line.line-bottom {
  top: 50%;
  transform: translateX(-50%) rotate(-45deg);
}

/* optional: fade out/in behavior for smoothness (if you had middle line) */
/* #menuBtn.open .icon-line.line-middle { opacity: 0; } */

/* color change if you want different circle when open (optional) */
/* #menuBtn.open { background: #111; } */

/* focus & accessibility */
#menuBtn:focus {
  outline: 2px solid rgba(255, 104, 23, 0.2);
  outline-offset: 3px;
}

/* mobile menu base (তোমার আগের দিকে রেখে দিলাম) */
#mobileMenu {
  position: fixed;
  bottom: 0;
  display: flex;
  z-index: 99999;
  align-items: center;
  gap: 20px;
  width: 100%;
}
.mobileMenu-items {
  border-radius: 12px;
  margin-left: 50%;
  padding: 14px 30px;
  margin-bottom: 14px;
  background: #131313;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translate(-50%);
  font-size: 8px;
  gap: 40px;
  position: relative;
}

/* ensure anchors are positioned for dot */
:root {
  --active-lift: 8px; /* 5px হলে 5px, 10px হলে 10px বসাও */
  /* --active-color: #ff6817; */
}

/* ensure smooth transitions for both movement and color */
.mobile-icon {
  position: relative;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
  text-decoration: none;
  color: inherit;
  font-size: 10px;
  font-weight: 800;
  transition: transform 0.18s ease, color 0.18s ease;
  color: #998e8a;
  text-transform: uppercase;
}

/* Dot under link (default hidden) */
.mobile-icon::after {
  content: "";
  position: absolute;
  left: 50%;
  transform: translateX(-50%) translateY(6px);
  bottom: -10px;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background: transparent;
  opacity: 0;
  transition: transform 0.18s ease, opacity 0.18s ease, background 0.18s ease;
}

/* Active state: lift up, change color, show dot */
.mobile-icon.active {
  transform: translateY(calc(-1 * var(--active-lift)));
  color: #fff2ec; /* text + svg (currentColor) will follow */
}
/* when active, dot appears and moves up */
/* move the dot slightly with the lifted item (looks nicer) */
.mobile-icon.active::after {
  transform: translateX(-50%) translateY(0);
  background: #ff6817;
  opacity: 1;
}

/* sliding menu animation */
.menu-slide {
  transform: translateY(100%);
  transition: transform 0.4s ease;
}

.menu-slide.active {
  transform: translateY(0);
}

/* optional: small visual hint for .open state of menuBtn lines */
#menuBtn.open .line-top {
  transform: translateY(8px) rotate(45deg);
}
#menuBtn.open .line-middle {
  opacity: 0;
}
#menuBtn.open .line-bottom {
  transform: translateY(-8px) rotate(-45deg);
}

/* blurred page content when menu open */
.blurred {
  filter: blur(4px);
  transition: filter 0.2s ease;
}
